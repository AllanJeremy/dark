version: 2
jobs:
  build:
    docker:
      - image: docker:stable-git

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            apk add --update build-base bash curl


      # fswatch
      - restore_cache:
          key: v1-fswatch

      - run:
          name: Build fswatch
          command: |
            if [ ! -d fswatch-1.10.0 ]; then
              wget -q https://github.com/emcrisostomo/fswatch/releases/download/1.10.0/fswatch-1.10.0.tar.gz
              tar -zxvf fswatch-1.10.0.tar.gz
              cd fswatch-1.10.0
              ./configure
              make
            fi

      - save_cache:
          key: v1-fswatch
          paths:
            - fswatch-1.10.0

      - run:
          name: Install fswatch
          command: |
            cd fswatch-1.10.0
            make install

      # main build
      - restore_cache:
          key: v1-build # our tools are good so we don't need to checksum

      # https://circleci.com/docs/2.0/building-docker-images/#mounting-folders
      - run:
          name: Copy in data
          command: |
            docker create -v /home/dark/conduit-frontend -v /home/dark/app --name vols alpine:3.4 /bin/true
            docker cp . vols:/home/dark/app
            # set the ownership of all this
            docker run -i --volumes-from vols dark sudo chown -R dark /home/dark/app


      - run: scripts/builder --compile --test


      - run:
          name: Copy out data
          command: |
            docker cp vols:/home/dark/app/client/elm-stuff client/elm-stuff
            docker cp vols:/home/dark/app/client/tests/elm-stuff client/tests/elm-stuff
            docker cp vols:/home/dark/app/server/_build server/_build

      - save_cache:
          key: v1-build
          when: always
          paths:
            - client/elm-stuff
            - client/tests/elm-stuff
            - server/_build

      - run:
          name: Run server
          background: true
          command: |
            scripts/builder --serve


      - run:
          name: Wait for server
          background: true
          command: |
            until $(curl --output /dev/null --silent --head --fail http://localhost:8000); do
              printf '.'
              sleep 1
            done

      - run: scripts/run-in-docker integration_tests/run.sh

